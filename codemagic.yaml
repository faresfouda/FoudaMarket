workflows:
  # Main build workflow with testing and quality assurance
  build_and_test:
    name: Build and Test FoudaMarket App
    max_build_duration: 120
    environment:
      flutter: stable
      xcode: 15.2
      cocoapods: default
      vars:
        XCODE_PROJECT: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        PACKAGE_NAME: "com.fouda.market"
    scripts:
      - name: Get Flutter dependencies
        script: |
          flutter pub get

      - name: Run Flutter analyze (Code Quality Check)
        script: |
          flutter analyze --no-fatal-infos
          echo "âœ… Code analysis completed"

      - name: Run unit tests
        script: |
          flutter test --coverage
          echo "âœ… Unit tests completed"

      - name: Generate test coverage report
        script: |
          genhtml coverage/lcov.info -o coverage/html
          echo "ðŸ“Š Test coverage report generated"

      - name: Debug CocoaPods sources
        script: |
          cd ios
          pod repo list
          pod search GoogleUtilities
          cd ..

      - name: Clean and update CocoaPods (iOS)
        script: |
          cd ios
          rm -rf ~/.cocoapods/repos
          rm -rf ~/Library/Caches/CocoaPods
          pod deintegrate
          pod cache clean --all
          rm -rf Pods Podfile.lock
          pod repo update
          pod install --repo-update
          cd ..

      - name: Clean Flutter build
        script: |
          flutter clean

      - name: Print Flutter and Xcode versions
        script: |
          flutter --version
          xcodebuild -version

      - name: Build iOS app (Development)
        script: |
          flutter build ios --debug --no-codesign
          echo "âœ… iOS debug build completed"

      - name: Build Android app (Debug)
        script: |
          flutter build apk --debug
          echo "âœ… Android debug build completed"

    artifacts:
      - build/ios/iphoneos/*.app
      - build/app/outputs/flutter-apk/app-debug.apk
      - coverage/html/**
      - coverage/lcov.info

  # Production build workflow with proper signing
  build_production:
    name: Build Production FoudaMarket App
    max_build_duration: 120
    environment:
      flutter: stable
      xcode: 15.2
      cocoapods: default
      vars:
        XCODE_PROJECT: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        PACKAGE_NAME: "com.fouda.market"
        # iOS Code Signing - Add these in Codemagic UI
        # CM_CERTIFICATE: "your_certificate"
        # CM_CERTIFICATE_PASSWORD: "your_password"
        # CM_PROVISIONING_PROFILE: "your_provisioning_profile"
        # CM_KEYCHAIN_PASSWORD: "your_keychain_password"
        # CM_APP_STORE_CONNECT_ISSUER_ID: "your_issuer_id"
        # CM_APP_STORE_CONNECT_API_KEY_ID: "your_api_key_id"
        # CM_APP_STORE_CONNECT_API_KEY: "your_api_key"
    scripts:
      - name: Get Flutter dependencies
        script: |
          flutter pub get

      - name: Run quality checks
        script: |
          flutter analyze --no-fatal-infos
          flutter test --coverage
          echo "âœ… Quality checks completed"

      - name: Setup iOS code signing
        script: |
          # Setup keychain
          keychain_name="codemagic.keychain"
          keychain_password="$CM_KEYCHAIN_PASSWORD"
          
          # Create keychain
          security create-keychain -p "$keychain_password" "$keychain_name"
          security list-keychains -s "$keychain_name"
          security default-keychain -s "$keychain_name"
          security unlock-keychain -p "$keychain_password" "$keychain_name"
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/"$keychain_name"
          
          # Import certificate
          security import "$CM_CERTIFICATE" -k "$keychain_name" -P "$CM_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$keychain_password" "$keychain_name"
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$CM_PROVISIONING_PROFILE" ~/Library/MobileDevice/Provisioning\ Profiles/
          
          echo "âœ… iOS code signing setup completed"

      - name: Clean and update CocoaPods (iOS)
        script: |
          cd ios
          rm -rf ~/.cocoapods/repos
          rm -rf ~/Library/Caches/CocoaPods
          pod deintegrate
          pod cache clean --all
          rm -rf Pods Podfile.lock
          pod repo update
          pod install --repo-update
          cd ..

      - name: Clean Flutter build
        script: |
          flutter clean

      - name: Build iOS app (Production with signing)
        script: |
          flutter build ios --release
          echo "âœ… iOS production build completed"

      - name: Build Android app (Release)
        script: |
          flutter build apk --release
          echo "âœ… Android release build completed"

      - name: Create iOS IPA
        script: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath build/Runner.xcarchive archive
          xcodebuild -exportArchive -archivePath build/Runner.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build/ios
          cd ..
          echo "âœ… iOS IPA created"

    artifacts:
      - build/ios/iphoneos/*.app
      - build/ios/*.ipa
      - build/app/outputs/flutter-apk/app-release.apk

  # Quick test workflow for pull requests
  test_only:
    name: Test FoudaMarket App
    max_build_duration: 30
    environment:
      flutter: stable
    scripts:
      - name: Get Flutter dependencies
        script: |
          flutter pub get

      - name: Run code analysis
        script: |
          flutter analyze --no-fatal-infos
          echo "âœ… Code analysis completed"

      - name: Run unit tests
        script: |
          flutter test --coverage
          echo "âœ… Unit tests completed"

      - name: Generate test coverage report
        script: |
          genhtml coverage/lcov.info -o coverage/html
          echo "ðŸ“Š Test coverage report generated"

    artifacts:
      - coverage/html/**
      - coverage/lcov.info

  # Development build for testing on device
  build_development:
    name: Build Development FoudaMarket App
    max_build_duration: 90
    environment:
      flutter: stable
      xcode: 15.2
      cocoapods: default
      vars:
        XCODE_PROJECT: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        PACKAGE_NAME: "com.fouda.market"
    scripts:
      - name: Get Flutter dependencies
        script: |
          flutter pub get

      - name: Quick quality check
        script: |
          flutter analyze --no-fatal-infos
          echo "âœ… Quick quality check completed"

      - name: Clean and update CocoaPods (iOS)
        script: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Clean Flutter build
        script: |
          flutter clean

      - name: Build iOS app (Development for device)
        script: |
          flutter build ios --debug --no-codesign
          echo "âœ… iOS development build completed"

      - name: Build Android app (Debug)
        script: |
          flutter build apk --debug
          echo "âœ… Android debug build completed"

    artifacts:
      - build/ios/iphoneos/*.app
      - build/app/outputs/flutter-apk/app-debug.apk

# Global environment variables
environment:
  flutter: stable
  xcode: 15.2
  cocoapods: default
  vars:
    XCODE_PROJECT: "ios/Runner.xcworkspace"
    XCODE_SCHEME: "Runner"
    PACKAGE_NAME: "com.fouda.market"

# Global scripts that can be reused
scripts:
  - name: Setup Flutter
    script: |
      flutter pub get
      flutter doctor -v

  - name: Run Tests
    script: |
      flutter test --coverage
      genhtml coverage/lcov.info -o coverage/html

  - name: Code Analysis
    script: |
      flutter analyze --no-fatal-infos
